/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import proyectofinal.conectarBBDD;
import proyectofinal.usuario;

/**
 *
 * @author Usuario
 */
public class match extends javax.swing.JFrame {

    conectarBBDD con = new conectarBBDD();
    Connection cn = con.getConnection();
    public static ResultSet rs = null;
    public static Statement st = null;
    private usuario usu;

    /**
     * Creates new form match
     */
    public match() {
        initComponents();
    }

    public match(usuario usu) throws SQLException, IOException {
        this.usu = usu;
        initComponents();
        llamarImagen(usu);

    }

    public usuario getUsu() {
        return usu;
    }

    public void setUsu(usuario usu) {
        this.usu = usu;
    }

    public void llamarImagen(usuario usu) throws SQLException, IOException {
        String nick = usu.getNick();
        String statement = "SELECT imgperfil FROM usuarios where nick not in(SELECT nick FROM usuarios where nick = '" + nick + "');";
        st = cn.createStatement();
        rs = st.executeQuery(statement);
        rs.first();
        byte[] img = rs.getBytes("imgperfil");
        Image imagen = getImage(img, false);
        imagen = imagen.getScaledInstance(200, 200, Image.SCALE_DEFAULT);
        foto.setIcon(new ImageIcon(imagen));
    }

    public void siguienteImagen(usuario usu) throws SQLException, IOException {
        byte[] img = rs.getBytes("imgperfil");
        Image imagen = getImage(img, false);
        imagen = imagen.getScaledInstance(200, 200, Image.SCALE_DEFAULT);
        foto.setIcon(new ImageIcon(imagen));
    }

    private Image getImage(byte[] bytes, boolean isThumbnail) throws IOException {

        ImageReader reader = null;
        ImageReadParam param = null;
        try {
            ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
            Iterator readers = ImageIO.getImageReadersByFormatName("png");
            reader = (ImageReader) readers.next();
            Object source = bis; // File or InputStream
            ImageInputStream iis = ImageIO.createImageInputStream(source);
            reader.setInput(iis, true);
            param = reader.getDefaultReadParam();
            if (isThumbnail) {

                param.setSourceSubsampling(4, 4, 0, 0);

            }
        } catch (IOException iOException) {
            JOptionPane.showMessageDialog(null, "png error");
        }
        return reader.read(0, param);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        foto = new javax.swing.JLabel();
        likeBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        likeBut.setText("Like");
        likeBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                likeButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(likeBut)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(likeBut)))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void likeButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_likeButActionPerformed
        try {
            if (rs.isLast() == false) {
                rs.next();
                siguienteImagen(usu);
            } else {
                JOptionPane.showMessageDialog(null, "Has llegado al final");
            }

        } catch (SQLException ex) {
            Logger.getLogger(match.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(match.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_likeButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(match.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(match.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(match.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(match.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new match().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel foto;
    private javax.swing.JButton likeBut;
    // End of variables declaration//GEN-END:variables
}
