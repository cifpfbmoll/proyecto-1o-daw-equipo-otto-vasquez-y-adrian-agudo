/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;
import proyectofinal.usuario;
import com.mysql.jdbc.MysqlDataTruncation;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import proyectofinal.conectarBBDD;
/**
 *
 * @author ADRI
 */
public class opciones extends javax.swing.JFrame {
    private usuario usu;
    conectarBBDD con = new conectarBBDD();
    /**
     * Creates new form opciones
     */
    public opciones() {
        initComponents();
    }
    
    public opciones(usuario usu){
        this.usu=usu;
        initComponents();
    }

    public usuario getUsu() {
        return usu;
    }

    public void setUsu(usuario usu) {
        this.usu = usu;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        camContraBut = new javax.swing.JButton();
        camNombreUsuBut = new javax.swing.JButton();
        camResiBut = new javax.swing.JButton();
        camFechaNacBut = new javax.swing.JButton();
        camNombreBut = new javax.swing.JButton();
        camApellidosBut = new javax.swing.JButton();
        camDescBut = new javax.swing.JButton();
        camGenBut = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        camLugarBut = new javax.swing.JButton();
        camEdadBut = new javax.swing.JButton();
        camSexoBut = new javax.swing.JButton();
        atrasBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("OPCIONES");

        jLabel2.setText("Modificar perfíl");

        camContraBut.setText("Cambiar contraseña");
        camContraBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camContraButActionPerformed(evt);
            }
        });

        camNombreUsuBut.setText("Cambiar nombre de usuario");
        camNombreUsuBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camNombreUsuButActionPerformed(evt);
            }
        });

        camResiBut.setText("Cambiar residencia");
        camResiBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camResiButActionPerformed(evt);
            }
        });

        camFechaNacBut.setText("Cambiar fecha nacimiento");
        camFechaNacBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camFechaNacButActionPerformed(evt);
            }
        });

        camNombreBut.setText("Cambiar nombre");
        camNombreBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camNombreButActionPerformed(evt);
            }
        });

        camApellidosBut.setText("Cambiar apellidos");
        camApellidosBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camApellidosButActionPerformed(evt);
            }
        });

        camDescBut.setText("Cambiar descripción");
        camDescBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camDescButActionPerformed(evt);
            }
        });

        camGenBut.setText("Cambiar género");
        camGenBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camGenButActionPerformed(evt);
            }
        });

        jLabel3.setText("Modificar filtros de búsqueda");

        camLugarBut.setText("Lugar");
        camLugarBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camLugarButActionPerformed(evt);
            }
        });

        camEdadBut.setText("Edad");
        camEdadBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camEdadButActionPerformed(evt);
            }
        });

        camSexoBut.setText("Sexo");

        atrasBut.setText("Atrás");
        atrasBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(314, 314, 314))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(atrasBut)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(camResiBut, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(camNombreUsuBut)
                                                    .addComponent(camContraBut, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(camSexoBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(camEdadBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(camLugarBut, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel3)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(43, 43, 43)
                                            .addComponent(camFechaNacBut, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(148, 148, 148)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(camDescBut, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(camGenBut, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(camApellidosBut, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(camNombreBut, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(camNombreBut)
                    .addComponent(camNombreUsuBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(camApellidosBut)
                    .addComponent(camContraBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(camResiBut)
                    .addComponent(camDescBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(camFechaNacBut)
                    .addComponent(camGenBut))
                .addGap(82, 82, 82)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(camLugarBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(camEdadBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(camSexoBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(atrasBut)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void camNombreUsuButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camNombreUsuButActionPerformed
        try{
            String input = JOptionPane.showInputDialog("Introducir nuevo NOMBRE DE USUARIO");
            if (!input.equals("")){
                if (input.length()<=10){ 
                    Statement st2=con.getConnection().createStatement();
                    ResultSet usuarios=st2.executeQuery("select * from usuarios where nick ='"+input+"'");
                        if (!usuarios.next()){
                            PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET nick = ? WHERE id = ?");
                            update.setString(1, input);
                            update.setInt(2, usu.getId());
                            update.executeUpdate();
                            usu.setNick(input);
                            update.close();
                            JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
                        }else{
                            if (usu.getNick().equals(input)){
                                 JOptionPane.showMessageDialog(null, "Debe de introducir un nuevo campo distinto al que ya tenia");
                            }else{
                                JOptionPane.showMessageDialog(null, "Ya existe el usuario");
                            }
                        }
                }else{
                    JOptionPane.showMessageDialog(null, "Campo demasiado extenso");
                }
            }else{
                 JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        }catch(SQLException ex){
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camNombreUsuButActionPerformed

    private void camNombreButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camNombreButActionPerformed
         try{
            String input = JOptionPane.showInputDialog("Introducir nuevo NOMBRE");
            if (!input.equals("")){
                if (input.length()<=20){ 
                    PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET nombre = ? WHERE id = ?");
                    update.setString(1, input);
                    update.setInt(2, usu.getId());
                    update.executeUpdate();
                    usu.setNombre(input);
                    update.close();
                    JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
                }else{
                    JOptionPane.showMessageDialog(null, "Campo demasiado extenso");
                }
            }else{
                 JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        }catch(SQLException ex){
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camNombreButActionPerformed

    private void camDescButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camDescButActionPerformed
        try {
            String input = JOptionPane.showInputDialog("Introducir nueva DESCRIPCIÓN");
            if (!input.equals("")) {
                PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET descripcion = ? WHERE id = ?");
                update.setString(1, input);
                update.setInt(2, usu.getId());
                update.executeUpdate();
                usu.setDescripcion(input);
                update.close();
                JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        } catch (SQLException ex) {
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camDescButActionPerformed

    private void camLugarButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camLugarButActionPerformed
        
    }//GEN-LAST:event_camLugarButActionPerformed

    private void camEdadButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camEdadButActionPerformed
       
    }//GEN-LAST:event_camEdadButActionPerformed

    private void camApellidosButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camApellidosButActionPerformed
        try {
            String input = JOptionPane.showInputDialog("Introducir nuevos APELLIDOS");
            if (!input.equals("")) {
                PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET apellidos = ? WHERE id = ?");
                update.setString(1, input);
                update.setInt(2, usu.getId());
                update.executeUpdate();
                usu.setApellidos(input);
                update.close();
                JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        } catch (SQLException ex) {
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camApellidosButActionPerformed

    private void camGenButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camGenButActionPerformed
        try {
            String genero;
            String anterior=usu.getGenero();
            System.out.println(anterior);
            PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET genero = ? WHERE id = ?");
            if(anterior.equals("masculino")){
                genero="femenino";  
                usu.setGenero("femenino");
            }else{  
                genero="masculino";    
                usu.setGenero("masculino");
            }
            update.setString(1, genero);
            update.setInt(2, usu.getId());  
            update.executeUpdate();
//            update.close();
            JOptionPane.showMessageDialog(null, "Se cambió de género de "+anterior+" a "+usu.getGenero());
        } catch (SQLException ex) {
                Logger.getLogger(opciones.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_camGenButActionPerformed

    private void camContraButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camContraButActionPerformed
        try {
            String input = JOptionPane.showInputDialog("Introducir nueva CONTRASEÑA");
            if (!input.equals("")) {
                PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET contraseña = ? WHERE id = ?");
                update.setString(1, input);
                update.setInt(2, usu.getId());
                update.executeUpdate();
                update.close();
                JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        } catch (SQLException ex) {
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camContraButActionPerformed

    private void camFechaNacButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camFechaNacButActionPerformed
         try {
            String input = JOptionPane.showInputDialog("Introducir nueva FECHA DE NACIMIENTO");
            Pattern patron = Pattern.compile("[0-9]{4}/[0-9]{2}/[0-9]{2}");
            Matcher mat = patron.matcher(input);
            if (!input.equals("")) {
                if (mat.matches()){
                    PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET fechaNac = ? WHERE id = ?");
                    update.setString(1, input);
                    update.setInt(2, usu.getId());
                    update.executeUpdate();
                    usu.setFechaNac(input);
                    update.close();
                    JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
                }else{
                    JOptionPane.showMessageDialog(null, "La fecha no se adecua al formato (YYYY-MM-DD)");
                }  
            } else {
                JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        }catch (MysqlDataTruncation ex2 ){
            JOptionPane.showMessageDialog(null, "Fecha errónea");    
        } catch (SQLException ex) {
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camFechaNacButActionPerformed

    private void camResiButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camResiButActionPerformed
       try {
            String input = JOptionPane.showInputDialog("Introducir nueva PROVINCIA");
            if (!input.equals("")) {
                PreparedStatement update = con.getConnection().prepareStatement("UPDATE usuarios SET provincia = ? WHERE id = ?");
                update.setString(1, input);
                update.setInt(2, usu.getId());
                update.executeUpdate();
                usu.setProvincia(input);
                update.close();
                JOptionPane.showMessageDialog(null, "Se realizó el cambio correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "El campo no puede estar vacío");
            }
        } catch (SQLException ex) {
            System.out.println("Hubo un problema");
        }
    }//GEN-LAST:event_camResiButActionPerformed

    private void atrasButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasButActionPerformed

            menuPrincipal menu=new menuPrincipal(usu);
            menu.setVisible(true);
            this.dispose();

    }//GEN-LAST:event_atrasButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new opciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atrasBut;
    private javax.swing.JButton camApellidosBut;
    private javax.swing.JButton camContraBut;
    private javax.swing.JButton camDescBut;
    private javax.swing.JButton camEdadBut;
    private javax.swing.JButton camFechaNacBut;
    private javax.swing.JButton camGenBut;
    private javax.swing.JButton camLugarBut;
    private javax.swing.JButton camNombreBut;
    private javax.swing.JButton camNombreUsuBut;
    private javax.swing.JButton camResiBut;
    private javax.swing.JButton camSexoBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
